His government focused on dismantling the legacy of apartheid by tackling institutionalised racism and fostering racial reconciliation. Ideologically an African nationalist and socialist, he served as the president of the African National Congress (ANC) party from 1991 to 1997.
A Xhosa speaker, Mandela was born into the Thembu royal family in Mvezo, Union of South Africa. He studied law at the University of Fort Hare and the University of Witwatersrand before working as a lawyer in Johannesburg. There he became involved in anti-colonial and African nationalist politics, joining the ANC in 1943 and co-founding its Youth League in 1944. After the National Party's white-only government established apartheid, a system of racial segregation that privileged whites, Mandela and the ANC committed themselves to its overthrow. He was appointed president of the ANC's Transvaal branch, rising to prominence for his involvement in the 1952 Defiance Campaign and the 1955 Congress of the People. He was repeatedly arrested for seditious activities and was unsuccessfully prosecuted in the 1956 Treason Trial. Influenced by Marxism, he secretly joined the banned South African Communist Party (SACP). Although initially committed to non-violent protest, in association with the SACP he co-founded the militant uMkhonto we Sizwe in 1961 and led a sabotage campaign against the government. He was arrested and imprisoned in 1962, and, following the Rivonia Trial, was sentenced to life imprisonment for conspiring to overthrow the state.
Mandela served 27 years in prison, split between Robben Island, Pollsmoor Prison and Victor Verster Prison. Amid growing domestic and international pressure and fears of racial civil war, President F. W. de Klerk released him in 1990. Mandela and de Klerk led efforts to negotiate an end to apartheid, which resulted in the 1994 multiracial general election in which Mandela led the ANC to victory and became president. Leading a broad coalition government which promulgated a new constitution, Mandela emphasised reconciliation between the country's racial groups and created the Truth and Reconciliation Commission to investigate past human rights abuses. Economically, his administration retained its predecessor's liberal framework despite his own socialist beliefs, also introducing measures to encourage land reform, combat poverty and expand healthcare services. Internationally, Mandela acted as mediator in the Pan Am Flight 103 bombing trial and served as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki. Mandela became an elder statesman and focused on combating poverty and HIV/AIDS through the charitable Nelson Mandela Foundation.
Mandela was a controversial figure for much of his life. Although critics on the right denounced him as a communist terrorist and those on the far left deemed him too eager to negotiate and reconcile with apartheid's supporters, he gained international acclaim for his activism. Globally regarded as an icon of democracy and social justice, he received more than 250 honours, including the Nobel Peace Prize. He is held in deep respect within South Africa, where he is often referred to by his Thembu clan name, Madiba, and described as the "Father of the Nation".
sentenced to life imprisonment for conspiring to overthrow the state.
Mandela served 27 years in prison, split between Robben Island, Pollsmoor Prison and Victor Verster Prison. Amid growing domestic and international pressure and fears of racial civil war, President F. W. de Klerk released him in 1990. Mandela and de Klerk led efforts to negotiate an end to apartheid, which resulted in the 1994 multiracial general election in which Mandela led the ANC to victory and became president. Leading a broad coalition government which promulgated a new constitution, Mandela emphasised reconciliation between the country's racial groups and created the Truth and Reconciliation Commission to investigate past human rights abuses. Economically, his administration retained its predecessor's liberal framework despite his own socialist beliefs, also introducing measures to encourage land reform, combat poverty and expand healthcare services. Internationally, Mandela acted as mediator in the Pan Am Flight 103 bombing trial and served as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki. Mandela became an elder statesman and focused on combating poverty and HIV/AIDS through the charitable Nelson Mandela Foundation.
Mandela was a controversial figure for much of his life. Although critics on the right denounced him as a communist terrorist and those on the far left deemed him too eager to negotiate and reconcile with apartheid's supporters, he gained international acclaim for his activism. Globally regarded as an icon of democracy and social justice, he received more than 250 honours, including the Nobel Peace Prize. He is held in deep respect within South Africa, where he is often referred to by his Thembu clan name, Madiba, and described as the "Father of the Nation".
as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki. Mandela became an elder statesman and focused on combating poverty and HIV/AIDS through the charitable Nelson Mandela Foundation.
Mandela was a controversial figure for much of his life. Although critics on the right denounced him as a communist terrorist and those on the far left deemed him too eager to negotiate and reconcile with apartheid's supporters, he gained international acclaim for his activism. Globally regarded as an icon of democracy and social justice, he received more than 250 honours, including the Nobel Peace Prize. He is held in deep respect within South Africa, where he is often referred to by his Thembu clan name, Madiba, and described as the "Father of the Nation".
sentenced to life imprisonment for conspiring to overthrow the state.
Mandela served 27 years in prison, split between Robben Island, Pollsmoor Prison and Victor Verster Prison. Amid growing domestic and international pressure and fears of racial civil war, President F. W. de Klerk released him in 1990. Mandela and de Klerk led efforts to negotiate an end to apartheid, which resulted in the 1994 multiracial general election in which Mandela led the ANC to victory and became president. Leading a broad coalition government which promulgated a new constitution, Mandela emphasised reconciliation between the country's racial groups and created the Truth and Reconciliation Commission to investigate past human rights abuses. Economically, his administration retained its predecessor's liberal framework despite his own socialist beliefs, also introducing measures to encourage land reform, combat poverty and expand healthcare services. Internationally, Mandela acted as mediator in the Pan Am Flight 103 bombing trial and served as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki.

His government focused on dismantling the legacy of apartheid by tackling institutionalised racism and fostering racial reconciliation. Ideologically an African nationalist and socialist, he served as the president of the African National Congress (ANC) party from 1991 to 1997.
A Xhosa speaker, Mandela was born into the Thembu royal family in Mvezo, Union of South Africa. He studied law at the University of Fort Hare and the University of Witwatersrand before working as a lawyer in Johannesburg. There he became involved in anti-colonial and African nationalist politics, joining the ANC in 1943 and co-founding its Youth League in 1944. After the National Party's white-only government established apartheid, a system of racial segregation that privileged whites, Mandela and the ANC committed themselves to its overthrow. He was appointed president of the ANC's Transvaal branch, rising to prominence for his involvement in the 1952 Defiance Campaign and the 1955 Congress of the People. He was repeatedly arrested for seditious activities and was unsuccessfully prosecuted in the 1956 Treason Trial. Influenced by Marxism, he secretly joined the banned South African Communist Party (SACP). Although initially committed to non-violent protest, in association with the SACP he co-founded the militant uMkhonto we Sizwe in 1961 and led a sabotage campaign against the government. He was arrested and imprisoned in 1962, and, following the Rivonia Trial, was sentenced to life imprisonment for conspiring to overthrow the state.
Mandela served 27 years in prison, split between Robben Island, Pollsmoor Prison and Victor Verster Prison. Amid growing domestic and international pressure and fears of racial civil war, President F. W. de Klerk released him in 1990. Mandela and de Klerk led efforts to negotiate an end to apartheid, which resulted in the 1994 multiracial general election in which Mandela led the ANC to victory and became president. Leading a broad coalition government which promulgated a new constitution, Mandela emphasised reconciliation between the country's racial groups and created the Truth and Reconciliation Commission to investigate past human rights abuses. Economically, his administration retained its predecessor's liberal framework despite his own socialist beliefs, also introducing measures to encourage land reform, combat poverty and expand healthcare services. Internationally, Mandela acted as mediator in the Pan Am Flight 103 bombing trial and served as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki. Mandela became an elder statesman and focused on combating poverty and HIV/AIDS through the charitable Nelson Mandela Foundation.
Mandela was a controversial figure for much of his life. Although critics on the right denounced him as a communist terrorist and those on the far left deemed him too eager to negotiate and reconcile with apartheid's supporters, he gained international acclaim for his activism. Globally regarded as an icon of democracy and social justice, he received more than 250 honours, including the Nobel Peace Prize. He is held in deep respect within South Africa, where he is often referred to by his Thembu clan name, Madiba, and described as the "Father of the Nation".
sentenced to life imprisonment for conspiring to overthrow the state.
Mandela served 27 years in prison, split between Robben Island, Pollsmoor Prison and Victor Verster Prison. Amid growing domestic and international pressure and fears of racial civil war, President F. W. de Klerk released him in 1990. Mandela and de Klerk led efforts to negotiate an end to apartheid, which resulted in the 1994 multiracial general election in which Mandela led the ANC to victory and became president. Leading a broad coalition government which promulgated a new constitution, Mandela emphasised reconciliation between the country's racial groups and created the Truth and Reconciliation Commission to investigate past human rights abuses. Economically, his administration retained its predecessor's liberal framework despite his own socialist beliefs, also introducing measures to encourage land reform, combat poverty and expand healthcare services. Internationally, Mandela acted as mediator in the Pan Am Flight 103 bombing trial and served as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki. Mandela became an elder statesman and focused on combating poverty and HIV/AIDS through the charitable Nelson Mandela Foundation.
Mandela was a controversial figure for much of his life. Although critics on the right denounced him as a communist terrorist and those on the far left deemed him too eager to negotiate and reconcile with apartheid's supporters, he gained international acclaim for his activism. Globally regarded as an icon of democracy and social justice, he received more than 250 honours, including the Nobel Peace Prize. He is held in deep respect within South Africa, where he is often referred to by his Thembu clan name, Madiba, and described as the "Father of the Nation".
as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki. Mandela became an elder statesman and focused on combating poverty and HIV/AIDS through the charitable Nelson Mandela Foundation.
Mandela was a controversial figure for much of his life. Although critics on the right denounced him as a communist terrorist and those on the far left deemed him too eager to negotiate and reconcile with apartheid's supporters, he gained international acclaim for his activism. Globally regarded as an icon of democracy and social justice, he received more than 250 honours, including the Nobel Peace Prize. He is held in deep respect within South Africa, where he is often referred to by his Thembu clan name, Madiba, and described as the "Father of the Nation".
sentenced to life imprisonment for conspiring to overthrow the state.
Mandela served 27 years in prison, split between Robben Island, Pollsmoor Prison and Victor Verster Prison. Amid growing domestic and international pressure and fears of racial civil war, President F. W. de Klerk released him in 1990. Mandela and de Klerk led efforts to negotiate an end to apartheid, which resulted in the 1994 multiracial general election in which Mandela led the ANC to victory and became president. Leading a broad coalition government which promulgated a new constitution, Mandela emphasised reconciliation between the country's racial groups and created the Truth and Reconciliation Commission to investigate past human rights abuses. Economically, his administration retained its predecessor's liberal framework despite his own socialist beliefs, also introducing measures to encourage land reform, combat poverty and expand healthcare services. Internationally, Mandela acted as mediator in the Pan Am Flight 103 bombing trial and served as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki.

His government focused on dismantling the legacy of apartheid by tackling institutionalised racism and fostering racial reconciliation. Ideologically an African nationalist and socialist, he served as the president of the African National Congress (ANC) party from 1991 to 1997.
A Xhosa speaker, Mandela was born into the Thembu royal family in Mvezo, Union of South Africa. He studied law at the University of Fort Hare and the University of Witwatersrand before working as a lawyer in Johannesburg. There he became involved in anti-colonial and African nationalist politics, joining the ANC in 1943 and co-founding its Youth League in 1944. After the National Party's white-only government established apartheid, a system of racial segregation that privileged whites, Mandela and the ANC committed themselves to its overthrow. He was appointed president of the ANC's Transvaal branch, rising to prominence for his involvement in the 1952 Defiance Campaign and the 1955 Congress of the People. He was repeatedly arrested for seditious activities and was unsuccessfully prosecuted in the 1956 Treason Trial. Influenced by Marxism, he secretly joined the banned South African Communist Party (SACP). Although initially committed to non-violent protest, in association with the SACP he co-founded the militant uMkhonto we Sizwe in 1961 and led a sabotage campaign against the government. He was arrested and imprisoned in 1962, and, following the Rivonia Trial, was sentenced to life imprisonment for conspiring to overthrow the state.
Mandela served 27 years in prison, split between Robben Island, Pollsmoor Prison and Victor Verster Prison. Amid growing domestic and international pressure and fears of racial civil war, President F. W. de Klerk released him in 1990. Mandela and de Klerk led efforts to negotiate an end to apartheid, which resulted in the 1994 multiracial general election in which Mandela led the ANC to victory and became president. Leading a broad coalition government which promulgated a new constitution, Mandela emphasised reconciliation between the country's racial groups and created the Truth and Reconciliation Commission to investigate past human rights abuses. Economically, his administration retained its predecessor's liberal framework despite his own socialist beliefs, also introducing measures to encourage land reform, combat poverty and expand healthcare services. Internationally, Mandela acted as mediator in the Pan Am Flight 103 bombing trial and served as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki. Mandela became an elder statesman and focused on combating poverty and HIV/AIDS through the charitable Nelson Mandela Foundation.
Mandela was a controversial figure for much of his life. Although critics on the right denounced him as a communist terrorist and those on the far left deemed him too eager to negotiate and reconcile with apartheid's supporters, he gained international acclaim for his activism. Globally regarded as an icon of democracy and social justice, he received more than 250 honours, including the Nobel Peace Prize. He is held in deep respect within South Africa, where he is often referred to by his Thembu clan name, Madiba, and described as the "Father of the Nation".
sentenced to life imprisonment for conspiring to overthrow the state.
Mandela served 27 years in prison, split between Robben Island, Pollsmoor Prison and Victor Verster Prison. Amid growing domestic and international pressure and fears of racial civil war, President F. W. de Klerk released him in 1990. Mandela and de Klerk led efforts to negotiate an end to apartheid, which resulted in the 1994 multiracial general election in which Mandela led the ANC to victory and became president. Leading a broad coalition government which promulgated a new constitution, Mandela emphasised reconciliation between the country's racial groups and created the Truth and Reconciliation Commission to investigate past human rights abuses. Economically, his administration retained its predecessor's liberal framework despite his own socialist beliefs, also introducing measures to encourage land reform, combat poverty and expand healthcare services. Internationally, Mandela acted as mediator in the Pan Am Flight 103 bombing trial and served as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki. Mandela became an elder statesman and focused on combating poverty and HIV/AIDS through the charitable Nelson Mandela Foundation.
Mandela was a controversial figure for much of his life. Although critics on the right denounced him as a communist terrorist and those on the far left deemed him too eager to negotiate and reconcile with apartheid's supporters, he gained international acclaim for his activism. Globally regarded as an icon of democracy and social justice, he received more than 250 honours, including the Nobel Peace Prize. He is held in deep respect within South Africa, where he is often referred to by his Thembu clan name, Madiba, and described as the "Father of the Nation".
as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki. Mandela became an elder statesman and focused on combating poverty and HIV/AIDS through the charitable Nelson Mandela Foundation.
Mandela was a controversial figure for much of his life. Although critics on the right denounced him as a communist terrorist and those on the far left deemed him too eager to negotiate and reconcile with apartheid's supporters, he gained international acclaim for his activism. Globally regarded as an icon of democracy and social justice, he received more than 250 honours, including the Nobel Peace Prize. He is held in deep respect within South Africa, where he is often referred to by his Thembu clan name, Madiba, and described as the "Father of the Nation".
sentenced to life imprisonment for conspiring to overthrow the state.
Mandela served 27 years in prison, split between Robben Island, Pollsmoor Prison and Victor Verster Prison. Amid growing domestic and international pressure and fears of racial civil war, President F. W. de Klerk released him in 1990. Mandela and de Klerk led efforts to negotiate an end to apartheid, which resulted in the 1994 multiracial general election in which Mandela led the ANC to victory and became president. Leading a broad coalition government which promulgated a new constitution, Mandela emphasised reconciliation between the country's racial groups and created the Truth and Reconciliation Commission to investigate past human rights abuses. Economically, his administration retained its predecessor's liberal framework despite his own socialist beliefs, also introducing measures to encourage land reform, combat poverty and expand healthcare services. Internationally, Mandela acted as mediator in the Pan Am Flight 103 bombing trial and served as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki.

His government focused on dismantling the legacy of apartheid by tackling institutionalised racism and fostering racial reconciliation. Ideologically an African nationalist and socialist, he served as the president of the African National Congress (ANC) party from 1991 to 1997.
A Xhosa speaker, Mandela was born into the Thembu royal family in Mvezo, Union of South Africa. He studied law at the University of Fort Hare and the University of Witwatersrand before working as a lawyer in Johannesburg. There he became involved in anti-colonial and African nationalist politics, joining the ANC in 1943 and co-founding its Youth League in 1944. After the National Party's white-only government established apartheid, a system of racial segregation that privileged whites, Mandela and the ANC committed themselves to its overthrow. He was appointed president of the ANC's Transvaal branch, rising to prominence for his involvement in the 1952 Defiance Campaign and the 1955 Congress of the People. He was repeatedly arrested for seditious activities and was unsuccessfully prosecuted in the 1956 Treason Trial. Influenced by Marxism, he secretly joined the banned South African Communist Party (SACP). Although initially committed to non-violent protest, in association with the SACP he co-founded the militant uMkhonto we Sizwe in 1961 and led a sabotage campaign against the government. He was arrested and imprisoned in 1962, and, following the Rivonia Trial, was sentenced to life imprisonment for conspiring to overthrow the state.
Mandela served 27 years in prison, split between Robben Island, Pollsmoor Prison and Victor Verster Prison. Amid growing domestic and international pressure and fears of racial civil war, President F. W. de Klerk released him in 1990. Mandela and de Klerk led efforts to negotiate an end to apartheid, which resulted in the 1994 multiracial general election in which Mandela led the ANC to victory and became president. Leading a broad coalition government which promulgated a new constitution, Mandela emphasised reconciliation between the country's racial groups and created the Truth and Reconciliation Commission to investigate past human rights abuses. Economically, his administration retained its predecessor's liberal framework despite his own socialist beliefs, also introducing measures to encourage land reform, combat poverty and expand healthcare services. Internationally, Mandela acted as mediator in the Pan Am Flight 103 bombing trial and served as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki. Mandela became an elder statesman and focused on combating poverty and HIV/AIDS through the charitable Nelson Mandela Foundation.
Mandela was a controversial figure for much of his life. Although critics on the right denounced him as a communist terrorist and those on the far left deemed him too eager to negotiate and reconcile with apartheid's supporters, he gained international acclaim for his activism. Globally regarded as an icon of democracy and social justice, he received more than 250 honours, including the Nobel Peace Prize. He is held in deep respect within South Africa, where he is often referred to by his Thembu clan name, Madiba, and described as the "Father of the Nation".
sentenced to life imprisonment for conspiring to overthrow the state.
Mandela served 27 years in prison, split between Robben Island, Pollsmoor Prison and Victor Verster Prison. Amid growing domestic and international pressure and fears of racial civil war, President F. W. de Klerk released him in 1990. Mandela and de Klerk led efforts to negotiate an end to apartheid, which resulted in the 1994 multiracial general election in which Mandela led the ANC to victory and became president. Leading a broad coalition government which promulgated a new constitution, Mandela emphasised reconciliation between the country's racial groups and created the Truth and Reconciliation Commission to investigate past human rights abuses. Economically, his administration retained its predecessor's liberal framework despite his own socialist beliefs, also introducing measures to encourage land reform, combat poverty and expand healthcare services. Internationally, Mandela acted as mediator in the Pan Am Flight 103 bombing trial and served as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki. Mandela became an elder statesman and focused on combating poverty and HIV/AIDS through the charitable Nelson Mandela Foundation.
Mandela was a controversial figure for much of his life. Although critics on the right denounced him as a communist terrorist and those on the far left deemed him too eager to negotiate and reconcile with apartheid's supporters, he gained international acclaim for his activism. Globally regarded as an icon of democracy and social justice, he received more than 250 honours, including the Nobel Peace Prize. He is held in deep respect within South Africa, where he is often referred to by his Thembu clan name, Madiba, and described as the "Father of the Nation".
as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki. Mandela became an elder statesman and focused on combating poverty and HIV/AIDS through the charitable Nelson Mandela Foundation.
Mandela was a controversial figure for much of his life. Although critics on the right denounced him as a communist terrorist and those on the far left deemed him too eager to negotiate and reconcile with apartheid's supporters, he gained international acclaim for his activism. Globally regarded as an icon of democracy and social justice, he received more than 250 honours, including the Nobel Peace Prize. He is held in deep respect within South Africa, where he is often referred to by his Thembu clan name, Madiba, and described as the "Father of the Nation".
sentenced to life imprisonment for conspiring to overthrow the state.
Mandela served 27 years in prison, split between Robben Island, Pollsmoor Prison and Victor Verster Prison. Amid growing domestic and international pressure and fears of racial civil war, President F. W. de Klerk released him in 1990. Mandela and de Klerk led efforts to negotiate an end to apartheid, which resulted in the 1994 multiracial general election in which Mandela led the ANC to victory and became president. Leading a broad coalition government which promulgated a new constitution, Mandela emphasised reconciliation between the country's racial groups and created the Truth and Reconciliation Commission to investigate past human rights abuses. Economically, his administration retained its predecessor's liberal framework despite his own socialist beliefs, also introducing measures to encourage land reform, combat poverty and expand healthcare services. Internationally, Mandela acted as mediator in the Pan Am Flight 103 bombing trial and served as secretary-general of the Non-Aligned Movement from 1998 to 1999. He declined a second presidential term and was succeeded by his deputy, Thabo Mbeki.

Write a program to search an element using Linear Search.
CODE-
#include <stdio.h>
#define MAX_l 10
int ls(int arr[])
{
    int val, flag = 0;
    printf("enter search value");
    scanf("%d", &val);

    for (int i = 0; i < MAX_l; i++)
    {
        if (val == arr[i])
        {
            printf("%d found at %d \n", arr[i], i);
            flag += 1;
        }
    }
    if (flag <= 1)
    {
        printf("total %d results found", flag);
    }
}

int main()
{
    int arr[MAX_l];
    printf("enter data by spaces \n");
    for (int i = 0; i < MAX_l; i++)
    {
        scanf("%d", &arr[i]);
    }
    ls(arr);
}


1. Write a program to search an element using Binary Search
CODE-
    #include <stdio.h>
    #define MAX_l 10
    
    int binary_s(int arr[])
    {
        int val, flag = 0, level, f = 0, l = MAX_l - 1;
        level = (f + l) / 2;
        printf("enter search value");
        scanf("%d", &val);
        while (f <= l)
        {
            if (arr[level] == val)
            {
                printf("%d found at %d \n", arr[level], level);
                flag += 1;
                break;
            }
            else if (arr[level] < val)
            {
                f = level + 1;
            }
            else
            {
                l = level - 1;
            }
            level = (f + l) / 2;
        }
    }
    int main()
    {
        int arr[MAX_l];
        printf("enter data by spaces \n");
        for (int i = 0; i < MAX_l; i++)
        {
            scanf("%d", &arr[i]);
        }
    
        binary_s(arr);
    }

2. Write a program to sort the given array using Bubble Sort.
CODE-
#include <stdio.h>
#define max 10

int input(int arr[])
{
    for (int i = 0; i < max; i++)
    {
        scanf("%d", &arr[i]);
    }
}

int output(int arr[])
{
    for (int i = 0; i < max; i++)
    {
        printf("%d ,", arr[i]);
    }
    printf("\n");
}

int bsort(int arr[], int ord)
{
    int temp;
    for (int i = 0; i < max; i++)
    {
        for (int j = 0; j < max - i - 1; j++)
        {
            if (ord == 1)
            {
                if (arr[j] < arr[j + 1])
                {
                    temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
            else
            {
                if (arr[j] > arr[j + 1])
                {
                    temp = arr[j + 1];
                    arr[j + 1] = arr[j];
                    arr[j] = temp;
                }
            }
        }
    }
}

int main()
{
    int arr[max], ord, type, stop = 0;
    while (stop != 1)
    {
        printf("sellect \n1=>sort\n4=>exit\n");
        scanf("%d", &type);
        if (type != 4)
        {
            printf("1=>decending\n2=>assending\n");
            scanf("%d", &ord);
            printf("input arrey elements\n");
            input(arr);
            bsort(arr, ord);
            output(arr);
        }
        else
        {
            stop = 1;
            printf("adios \n");
        }
    }
}

3. Write a program to sort the given array using Selection Sort.
CODE-
    #include <stdio.h>
    #define max 10
    
    int input(int arr[])
    {
        for (int i = 0; i < max; i++)
        {
            scanf("%d", &arr[i]);
        }
    }
    
    int output(int arr[])
    {
        for (int i = 0; i < max; i++)
        {
            printf("%d ,", arr[i]);
        }
        printf("\n");
    }
    
    int sel_sort(int arr[], int ord)
    {
        int local = 0, temp;
        for (int i = 0; i < max; i++)
        {
            local = 0;
            for (int j = 0; j < max - i; j++)
            {
                if (ord == 1)
                {
                    if (arr[local] < arr[j])
                    {
                        temp = arr[local];
                        arr[local] = arr[j];
                        arr[j] = temp;
                        local += 1;
                    }
                }
                else
                {
                    if (arr[local] > arr[j])
                    {
                        temp = arr[local];
                        arr[local] = arr[j];
                        arr[j] = temp;
                        local += 1;
                    }
                }
            }
        }
    }
    
    int main()
    {
        int arr[max], ord, type, stop = 0;
        while (stop != 1)
        {
            printf("sellect \n1=>sort\n4=>exit\n");
            scanf("%d", &type);
            if (type != 4)
            {
                printf("1=>decending\n2=>assending\n");
                scanf("%d", &ord);
                printf("input arrey elements\n");
                input(arr);
                sel_sort(arr, ord);
                output(arr);
            }
            else
            {
                stop = 1;
                printf("adios \n");
            }
        }
    }

4. Write a program to sort the given array using Insertion Sort.
CODE-
    #include <stdio.h>
    #define max 10
    
    int input(int arr[])
    {
        for (int i = 0; i < max; i++)
        {
            scanf("%d", &arr[i]);
        }
    }
    int output(int arr[])
    {
        for (int i = 0; i < max; i++)
        {
            printf("%d ,", arr[i]);
        }
        printf("\n");
    }
    int ins_sort(int arr[], int ord)
    {
        int temp, key, temp1, temp2;
        for (int i = 0; i < max; i++)
        {
            for (int j = 0; j < i; j++)
            {
                if (ord == 1)
                {
                    if (arr[i] > arr[j])
                    {
                        temp = arr[i];
                        temp1 = arr[j];
                        for (int k = j; k < i; k++)
                        {
                            temp2 = arr[k + 1];
                            arr[k + 1] = temp1;
                            temp1 = temp2;
                        }
                        arr[j] = temp;
                    }
                }
                else
                {
                    if (arr[i] < arr[j])
                    {
                        temp = arr[i];
                        temp1 = arr[j];
                        for (int k = j; k < i; k++)
                        {
                            temp2 = arr[k + 1];
                            arr[k + 1] = temp1;
                            temp1 = temp2;
                        }
                        arr[j] = temp;
                    }
                }
            }
        }
    }

    int main()
    {
        int arr[max], ord, type, stop = 0;
        while (stop != 1)
        {
            printf("sellect \n1=>sort\n4=>exit\n");
            scanf("%d", &type);
            if (type != 4)
            {
                printf("1=>decending\n2=>assending\n");
                scanf("%d", &ord);
                printf("input arrey elements\n");
                input(arr);
                ins_sort(arr, ord);
                output(arr);
            }
            else
            {
                stop = 1;
                printf("adios \n");
            }
        }
    }

5. Write a program to sort the given array using QuickSort
CODE-
    #include <stdio.h>
    #define max 10
    
    int input(int arr[])
    {
        for (int i = 0; i < max; i++)
        {
            scanf("%d", &arr[i]);
        }
    }
    
    int output(int arr[])
    {
        for (int i = 0; i < max; i++)
        {
            printf("%d ,", arr[i]);
        }
        printf("\n");
    }
    
    void swap(int *x, int *y) {
        int Temp;
        Temp = *x;
        *x = *y;
        *y = Temp;
    }
    void quick_sort(int a[], int first, int last) {
        int pivot, i, j;
        if(first < last) {
            pivot = first;
            i = first;
            j = last;
            while (i < j) {
                while(a[i] <= a[pivot] && i < last)
                    i++;
                while(a[j] > a[pivot])
                    j--;
                if(i < j) {
                    swap(&a[i], &a[j]);
                }
            }
            swap(&a[pivot], &a[j]);
            quick_sort(a, first, j - 1);
            quick_sort(a, j + 1, last);
        }
    }
    
    
    int main()
    {
        int arr[max], type, stop = 0;
        while (stop != 1)
        {
            printf("sellect \n1=>sort\n4=>exit\n");
            scanf("%d", &type);
            if (type != 4)
            {
                printf("input arrey elements\n");
                input(arr);
                quick_sort(arr,0,max-1);
                output(arr);
            }
            else
            {
                stop = 1;
                printf("adios \n");
            }
        }
    }

6. Write a program to sort the given array using MergeSort.
CODE-
    #include <stdio.h>
    #define max 10
    
    int input(int arr[])
    {
        for (int i = 0; i < max; i++)
        {
            scanf("%d", &arr[i]);
        }
    }
    int output(int arr[])
    {
        for (int i = 0; i < max; i++)
        {
            printf("%d ,", arr[i]);
        }
        printf("\n");
    }
    void merge_sort(int i, int j, int a[], int aux[])
    {
        if (j <= i)
        {
            return;
        }
        int mid = (i + j) / 2;
        merge_sort(i, mid, a, aux);
        merge_sort(mid + 1, j, a, aux);
    
        int pointer_left = i;
        int pointer_right = mid + 1;
        int k;

        for (k = i; k <= j; k++)
        {
            if (pointer_left == mid + 1)
            {
                aux[k] = a[pointer_right];
                pointer_right++;
            }
            else if (pointer_right == j + 1)
            {
                aux[k] = a[pointer_left];
                pointer_left++;
            }
            else if (a[pointer_left] < a[pointer_right])
            {
                aux[k] = a[pointer_left];
                pointer_left++;
            }
            else
            {
                aux[k] = a[pointer_right];
                pointer_right++;
            }
        }
    
        for (k = i; k <= j; k++)
        {
            a[k] = aux[k];
        }
    }
    
    int main()
    {
        int arr[max],temp[max], type, stop = 0;
        while (stop != 1)
        {
            printf("sellect \n1=>sort\n4=>exit\n");
            scanf("%d", &type);
            if (type != 4)
            {
            
                printf("input arrey elements\n");
                input(arr);
                merge_sort(0, max - 1,arr,temp);
                output(arr);
            }
            else
            {
                stop = 1;
                printf("adios \n");
            }
        }
    }


7. Write a program to insert a new element in the given unsorted array at kth position.
CODE-
    #include <stdio.h>
    #define MAX_l 10
    
    int main()
    {
        int arr[MAX_l], element, pos;
        printf("enter data by spaces \n");
        for (int i = 0; i < MAX_l; i++)
        {
            scanf("%d", &arr[i]);
        }
        printf("element to be inserted \n");
        scanf("%d", &element);
        printf("pos of element \n");
        scanf("%d", &pos);
    
        for (int i = MAX_l; i > pos; i--)
        {
            arr[i] = arr[i - 1];
        }
        arr[pos] = element;
    
        printf("final array \n");
        for (int i = 0; i < MAX_l; i++)
        {
            printf("%d, ", arr[i]);
        }
    }


8. Write a program to delete an element from given sorted array.
CODE-
    #include <stdio.h>
    #define MAX_l 10
    
    int main()
    {
        int arr[MAX_l], element;
        printf("enter data by spaces \n");
        for (int i = 0; i < MAX_l; i++)
        {
            scanf("%d", &arr[i]);
        }
        printf("element to be deleted \n");
        scanf("%d", &element);
    
        for (int i = 0; i < MAX_l; i++)
        {
            if (element == arr[i])
            {
                for (int j = i; j <MAX_l; j++)
                {
                    arr[j] = arr[j+1];
                }
            }
        }
        arr[MAX_l-1] = 0;
        printf("final array \n");
        for (int i = 0; i < MAX_l; i++)
        {
            printf("%d ", arr[i]);
        }
    }

9. Write a program to merge to given sorted arrays.
CODE-
    #include <stdio.h>
    
    int main()
    {
        int arr1_s, arr2_s, arr3_s;
        printf("\nEnter the size of first array ");
        scanf("%d", &arr1_s);
        printf("\nEnter the size of second array ");
        scanf("%d", &arr2_s);
        arr3_s = arr1_s + arr2_s;
        printf("\nEnter the sorted array elements");
        int a[arr1_s], b[arr2_s], c[arr3_s];
        for (int i = 0; i < arr1_s; i++)
        {   scanf("%d", &a[i]);
            c[i] = a[i];}
        int k = arr1_s;
        printf("\nEnter the sorted array elements");
        for (int i = 0; i < arr2_s; i++)
        {   scanf("%d", &b[i]);
            c[k] = b[i];
            k++;}
        for (int i = 0; i < arr3_s; i++)
        {   
            int temp;
            for (int j = i + 1; j < arr3_s; j++)
            {
                if (c[i] < c[j])
                {   temp = c[i];
                    c[i] = c[j];
                    c[j] = temp;}}}
    
        for (int i = 0; i < arr3_s; i++)
        {
            printf(" %d ", c[i]);
        }
        return 0;
    }

10. Write a program to implement Stack using array, also show overflow and underflow in respective push and pop operations.
CODE-
    #include <stdio.h>
    #define size 50
    
    int push(int stack[], int top)
    {
        if ((top + 1) > size)
        {
            printf("overflow\n");
            return (50);
        }
        else
        {
            printf("enter element \n");
            int inp;
            scanf("%d", &inp);
            stack[top++] = inp;
            return top;
        }
    }
    int pop(int top, int bottom)
    {
        if ((top - 1) < 0)
        {
            printf("under flow\n");
            return (0);
        }
        else
        {
            printf("popped last element\n");
            return (--top);
        }
    }
    
    int disp(int stack[], int top, int bottom)
    {
        for (int i = bottom; i < top; i++)
        {
            printf("%d ", stack[i]);
        }
        printf("\n");
    }
    
    int main()
    {
        int stack[size], top, bottom = 0, inp, stop = 0;
    
        while (stop != 1)
        {
            printf("enter your choice \n1: push\n2: pop\n3: disp\n0: exit\n");
            scanf("%d", &inp);
    
            switch (inp)
            {
            case 1:
                top = push(stack, top);
                break;
            case 2:
                top = pop(top, bottom);
                break;
            case 3:
                disp(stack, top, bottom);
                break;
            case 0:
                stop = 1;
                printf("adios\n");
                break;
            default:
                break;
            }
        }
    }
11. Write a program to implement Queue using array, which shows insertion and deletion operations.
CODE-
    #include <stdio.h>
    #define max_l 3
    struct node
    {
        int value;
    };
    
    int push(int *f, int *r, struct node arr[])
    {
        int val;
        if (*r == *f && *r >= max_l)
        {
            *f = 0;
            *r = 0;
        }
        if (*r >= max_l)
        {
            printf("over flow\n");
            return 0;
        }
        else
        {
            printf("enter the value ");
    
            scanf("%d", &val);
            arr[(*r)++].value = val;
        }
    }
    
    int pop(int *f, int *r, struct node arr[])
    {
        int val;
        if (*f == *r)
        {
            printf("under flow\n");
            return 0;
        }
        else
        {
            printf("popped %d\n", arr[(*f)++].value);
        }
    }
    
    int display(int f, int r, struct node arr[])
    {
        int val;
        if (f == r)
        {
            printf("under flow \n");
            return 0;
        }
        printf("elements are:\n");
        for (int i = f; i <= r - 1; i++)
        {
            printf("%d\n", arr[i].value);
        }
    }
    
    int main()
    {
        struct node queue[max_l];
        int stop = 0, temp, choice, front = 0, rear = 0;
        while (stop != 1)
        {
            printf("\n1: push\n2: pop\n3: display\n4: exit\n");
            scanf("%d", &choice);
    
            switch (choice)
            {
            case 1:
                push(&front, &rear, queue);
                break;
            case 2:
                pop(&front, &rear, queue);
                break;
            case 3:
                display(front, rear, queue);
                break;
            case 4:
                stop = 1;
                break;
            default:
                printf("enter the correct value");
                break;
            }
        }
        return 0;
    }


12. Write a program to implement Circular Queue using array, which shows insertion and deletion operations.
CODE-
    #include <stdio.h>
    #define max 5
    int enqueue(int queue[], int *front, int *rear)
    {   int inp;
        scanf("%d", &inp);
        if ((*front == *rear + 1) || (*front == 0 && *rear == max - 1))
        {
            printf("\noverflow");
        }
        else
        {
            if (*front == -1)
            {
                *front = 0;
            }
            *rear = (*rear + 1) % max;
            queue[*rear] = inp;
        }
        printf("\nrear %d", *rear);
        printf(" front %d", *front);}
    int dequeue(int queue[], int *front, int *rear)
    {
        if (*front == -1)
        {
            printf("\nunder flow");
        }
        else
        {
            if (*front == *rear)
            {
                *front = -1;
                *rear = -1;
            }
            else
            {
                *front = (*front + 1) % max;
            }
        }
        printf("\nrear %d", *rear);
        printf(" front %d", *front);}
    int display(int queue[], int front, int rear)
    {   int i;
        if (front == -1)
        {
            printf("\nunder flow");
        }
        else
        {
            for (i = front; i != rear; i = (i + 1) % max)
            {
                printf("%d ", queue[i]);
            }
            printf("%d ", queue[i]);}}
    int main()
    {   int queue[5], front, rear, stop = 0, inp;
        front = -1;
        rear = front;
        while (stop != 1)
        {
            scanf("%d", &inp);
            switch (inp)
            {
            case 1:
                enqueue(queue, &front, &rear);
                break;
            case 2:
                dequeue(queue, &front, &rear);
                break;
            case 3:
                display(queue, front, rear);
                break;
            case 4:
                stop = 1;
                break;
    
            default:
                break;
            }}}

  
13. Write a program to implement Linear Linked List, showing all the operations, like creation, display, insertion, deletion and searching.
CODE-
    #include <stdio.h>
    #include <stdlib.h>
    
    struct node
    {
        int val;
        struct node *next;
    } *head = NULL;
    
    int insertion(int data)
    {
        struct node *ptr = head;
        struct node *temp = (struct node *)malloc(sizeof(struct node));
        temp->val = data;
        temp->next = NULL;
    
        if (head == NULL)
        {
            head = temp;
        }
        else
        {
        
            while (ptr->next != NULL)
            {
                ptr = ptr->next;
            }
            ptr->next = temp;
        }
        return 0;
    }
    
    void deletion()
    {
        struct node *ptr = head, *prev;
    
        while (ptr->next != NULL)
        {
            prev = ptr;
            ptr = ptr->next;
        }
        prev->next = NULL;
    }
    
    void traverse()
    {
        struct node *ptr = head;
        while (ptr->next != NULL)
        {
            printf("%d,", ptr->val);
            ptr = ptr->next;
        }
        printf("%d\n", ptr->val);
    }
    
    void search(int data)
    {
        int flag=0;
        struct node *ptr = head;
        while (ptr->next != NULL)
        {
            if (ptr->val == data)
            {
                printf("element found\n");
                flag=1;
                break;
            }
            ptr = ptr->next;
        }
        if (flag ==0)
        {
            printf("element not found\n");
        }
    }
    
    int main()
    {
        int stop = 0, choice, val;
    
        while (stop != 1)
        {
            printf("enter your choice");
            scanf("%d", &choice);
            switch (choice)
            {
            case 1:
                scanf("%d", &val);
                insertion(val);
                break;
            case 2:
                deletion();
                break;
            case 3:
                traverse();
                break;
            case 4:
                scanf("%d", &val);
                search(val);
                break;
            case 5:
                stop = 1;
                break;
    
            default:
                break;
            }
        }
    }

14. Write a program to implement Stack, using Linked List. Implement Push, Pop and display operations.
CODE-
    #include <stdio.h>
    #include <stdlib.h>
    
    struct node
    {
        int val;
        struct node *next;
    } *head = NULL;
    int push(int data)
    {
        struct node *ptr = head;
        struct node *temp = (struct node *)malloc(sizeof(struct node));
        temp->val = data;
        temp->next = NULL;    
        if (head == NULL)
        {
            head = temp;
        }
        else
        {
            while (ptr->next != NULL)
            {
                ptr = ptr->next;
            }
            ptr->next = temp;
        }
        return 0;
    }
    void pop()
    {
        struct node *ptr = head, *prev;    
        while (ptr->next != NULL)
        {
            prev = ptr;
            ptr = ptr->next;
        }
        prev->next = NULL;
    }
    void display()
    {
        struct node *ptr = head;
        while (ptr->next != NULL)
        {
            printf("%d,", ptr->val);
            ptr = ptr->next;
        }
        printf("%d\n", ptr->val);
    }
    
    int main()
    {
        int stop = 0, choice, val;
    
        while (stop != 1)
        {
            printf("enter your choice");
            scanf("%d", &choice);
            switch (choice)
            {
            case 1:
                scanf("%d", &val);
                push(val);
                break;
            case 2:
                pop();
                break;
            case 3:
                display();
                break;
            case 4:
                stop = 1;
                break;
    
            default:
                break;
            }
        }
    }

OUTPUT

15. Write a program to implement Queue, using Linked List. Implement Insertion, deletion and display operations.
CODE-
    #include <stdio.h>
    #include <stdlib.h>
    struct node
    {
        int val;
        struct node *next;
    } *head = NULL, *rear = NULL;
    void push()
    {
        int value;
        printf("enter the value ");
        scanf("%d", &value);
        struct node *temp = (struct node *)malloc(sizeof(struct node));
        temp->next = NULL;
        temp->val = value;    
        if (head == NULL && rear == NULL)
        {
            head = temp;
            rear = temp;
        }
        else
        {
            rear->next = temp;
            rear = temp;
        }}
    void pop()
    {
        int value;
    
        if (head == NULL || rear == NULL)
        {
            printf("empty queue");
        }
        else
        {
            printf("removing %d", head->val);
            head = head->next;  
        }}
    void disp()
    {
        struct node *temp = head;
        if (temp == NULL)
        {
            printf("empty queue");
        }
        else
        {   while (temp->next != NULL)
            {
                printf("%d ", temp->val);
                temp = temp->next;
            }
            printf("%d\n", temp->val);
        }}
    int main()
    {
        int stop = 0, choice;
        printf("\nenter your choice ");
        scanf("%d", &choice);    
        while (!stop)
        {
            switch (choice)
            {
            case 1:
                push();
                break;
            case 2:
                pop();
                break;
            case 3:
                disp();
                break;
            case 4:
                stop = 1;
                break;
            default:
                break;}
            printf("\nenter your choice ");
            scanf("%d", &choice);
        }}


16. Write a program to count the number of times an item is present in a linked list.
CODE-
    #include <stdio.h>
    #include <stdlib.h>
    
    struct node
    {
        int val;
        struct node *next;
    } *head = NULL;
    
    int insertion(int data)
    {
        struct node *ptr = head;
        struct node *temp = (struct node *)malloc(sizeof(struct node));
        temp->val = data;
        temp->next = NULL;
    
        if (head == NULL)
        {
            head = temp;
        }
        else
        {
        
            while (ptr->next != NULL)
            {
                ptr = ptr->next;
            }
            ptr->next = temp;
        }
        return 0;
    }
    
    int deletion()
    {
        struct node *ptr = head, *prev;
        if (head == NULL)
        {
            printf("underflow");
            return 0;
        }
        if (head->next == NULL)
        {
            head = NULL;
        }
        else
        {
            while (ptr->next != NULL)
            {
                prev = ptr;
                ptr = ptr->next;
            }
            prev->next = NULL;
        }
        return 0;
    }
    
    void traverse()
    {
        struct node *ptr = head;
        while (ptr->next != NULL)
        {
            printf("%d,", ptr->val);
            ptr = ptr->next;
        }
        printf("%d\n", ptr->val);
    }
    int count()
    {
        int no = 0;
        struct node *ptr = head;
        if (head != NULL)
        {
            while (ptr->next != NULL)
            {
                ptr = ptr->next;
                no++;
            }
            no++;
        }
        return no;
    }
    
    int main()
    {
        int stop = 0, choice, val;
    
        while (stop != 1)
        {
            printf("enter your choice");
            scanf("%d", &choice);
            switch (choice)
            {
            case 1:
                scanf("%d", &val);
                insertion(val);
                break;
            case 2:
                deletion();
                break;
            case 3:
                traverse();
                break;
            case 4:
                printf("number of elements are %d \n", count());
                break;
            case 5:
                stop = 1;
                break;
    
            default:
                break;
            }
        }
    }
17. Write a program to increment the data part of every node present in a linked list by 10. Display the data both before incrimination and after.
CODE-
    #include <stdio.h>
    #include <stdlib.h>
    
    struct node
    {
        int val;
        struct node *next;
    } *head = NULL;
    
    int insertion(int data)
    {
        struct node *ptr = head;
        struct node *temp = (struct node *)malloc(sizeof(struct node));
        temp->val = data;
        temp->next = NULL;
    
        if (head == NULL)
        {
            head = temp;
        }
        else
        {
        
            while (ptr->next != NULL)
            {
                ptr = ptr->next;
            }
            ptr->next = temp;
        }
        return 0;
    }
    
    int deletion()
    {
        struct node *ptr = head, *prev;
        if (head == NULL)
        {
            printf("underflow");
            return 0;
        }
        if (head->next == NULL)
        {
            head = NULL;
        }
        else
        {
            while (ptr->next != NULL)
            {
                prev = ptr;
                ptr = ptr->next;
            }
            prev->next = NULL;
        }
        return 0;
    }
    
    void traverse()
    {
        struct node *ptr = head;
        while (ptr->next != NULL)
        {
            printf("%d,", ptr->val);
            ptr = ptr->next;
        }
        printf("%d\n", ptr->val);
    }
    int inc10()
    {
        struct node *ptr = head;
        while (ptr->next != NULL)
        {
            ptr->val += 10;
            ptr = ptr->next;
        }
        ptr->val += 10;
    }
    
    int main()
    {
        int stop = 0, choice, val;
    
        while (stop != 1)
        {
            printf("\n1: push\n2: pop\n3: display\n4: increment by 10\n5: exit\n");
            printf("enter your choice");
            scanf("%d", &choice);
            switch (choice)
            {
            case 1:
                scanf("%d", &val);
                insertion(val);
                break;
            case 2:
                deletion();
                break;
            case 3:
                traverse();
                break;
            case 4:
                traverse();
                inc10();
                traverse();
                break;
            case 5:
                stop = 1;
                break;
    
            default:
                break;
            }
        }
    }

18. Write a program to implement Doubly Linked List, showing all the operations, like creation, display, insertion, deletion and searching.
CODE-
#include<stdio.h>  
#include<stdlib.h>  
struct node  
{  
    struct node *prev;  
    struct node *next;  
    int data;  
};  
struct node *head;  
void insertion_beginning();  
void insertion_last();  
void insertion_specified();  
void deletion_beginning();  
void deletion_last();  
void deletion_specified();  
void display();  
void search();  
void main ()  
{  
int choice =0;  
    while(choice != 9)  
    {  
        printf("Main Menu\n");  
        printf("Choose one option from the following list ...\n"); 
        printf("1.insert in begining\n");
        printf("2.insert at last\n");  
        printf("3.insert at any location\n");
        printf("4.delete from Beginning\n");
        printf("5.delete from last\n"); 
        printf("6.delete specific data\n"); 
        printf("7.show\n"); 
        printf("8.exit\n"); 
        printf("\nEnter your choice?\n");  
        scanf("\n%d",&choice);  
        switch(choice)  
        {  
            case 1:  
            insertion_beginning();  
            break;  
            case 2:  
                    insertion_last();  
            break;  
            case 3:  
            insertion_specified();  
            break;  
            case 4:  
            deletion_beginning();  
            break;  
            case 5:  
            deletion_last();  
            break;  
            case 6:  
            deletion_specified();  
            break;   
            case 7:  
            display();  
            break;  
            case 8:  
            exit(0);  
            break;  
            default:  
            printf("Please enter valid choice..");  
        }  
    }  
}  
void insertion_beginning()  
{  
   struct node *ptr;   
   int item;  
   ptr = (struct node *)malloc(sizeof(struct node));  
   if(ptr == NULL)  
   {  
       printf("\nOVERFLOW");  
   }  
   else  
   {  
    printf("\nEnter Item value");  
    scanf("%d",&item);  
      
   if(head==NULL)  
   {  
       ptr->next = NULL;  
       ptr->prev=NULL;  
       ptr->data=item;  
       head=ptr;  
   }  
   else   
   {  
       ptr->data=item;  
       ptr->prev=NULL;  
       ptr->next = head;  
       head->prev=ptr;  
       head=ptr;  
   }  
   printf("\nNode inserted\n");  
}  
     
}  
void insertion_last()  
{  
   struct node *ptr,*temp;  
   int item;  
   ptr = (struct node *) malloc(sizeof(struct node));  
   if(ptr == NULL)  
   {  
       printf("\nOVERFLOW");  
   }  
   else  
   {  
       printf("\nEnter value");  
       scanf("%d",&item);  
        ptr->data=item;  
       if(head == NULL)  
       {  
           ptr->next = NULL;  
           ptr->prev = NULL;  
           head = ptr;  
       }  
       else  
       {  
          temp = head;  
          while(temp->next!=NULL)  
          {  
              temp = temp->next;  
          }  
          temp->next = ptr;  
          ptr ->prev=temp;  
          ptr->next = NULL;  
          }  
             
       }  
     printf("\nnode inserted\n");  
    }  
void insertion_specified()  
{  
   struct node *ptr,*temp;  
   int item,loc,i;  
   ptr = (struct node *)malloc(sizeof(struct node));  
   if(ptr == NULL)  
   {  
       printf("\n OVERFLOW");  
   }  
   else  
   {  
       temp=head;  
       printf("Enter the location");  
       scanf("%d",&loc);  
       for(i=0;i<loc;i++)  
       {  
           temp = temp->next;  
           if(temp == NULL)  
           {  
               printf("\n There are less than %d elements", loc);  
               return;  
           }  
       }  
       printf("Enter value");  
       scanf("%d",&item);  
       ptr->data = item;  
       ptr->next = temp->next;  
       ptr -> prev = temp;  
       temp->next = ptr;  
       temp->next->prev=ptr;  
       printf("\nnode inserted\n");  
   }  
}  
void deletion_beginning()  
{  
    struct node *ptr;  
    if(head == NULL)  
    {  
        printf("\n UNDERFLOW");  
    }  
    else if(head->next == NULL)  
    {  
        head = NULL;   
        free(head);  
        printf("\nnode deleted\n");  
    }  
    else  
    {  
        ptr = head;  
        head = head -> next;  
        head -> prev = NULL;  
        free(ptr);  
        printf("\nnode deleted\n");  
    }  
  
}  
void deletion_last()  
{  
    struct node *ptr;  
    if(head == NULL)  
    {  
        printf("\n UNDERFLOW");  
    }  
    else if(head->next == NULL)  
    {  
        head = NULL;   
        free(head);   
        printf("\nnode deleted\n");  
    }  
    else   
    {  
        ptr = head;   
        if(ptr->next != NULL)  
        {  
            ptr = ptr -> next;   
        }  
        ptr -> prev -> next = NULL;   
        free(ptr);  
        printf("\nnode deleted\n");  
    }  
}  
void deletion_specified()  
{  
    struct node *ptr, *temp;  
    int val;  
    printf("\n Enter the data after which the node is to be deleted : ");  
    scanf("%d", &val);  
    ptr = head;  
    while(ptr -> data != val)  
    ptr = ptr -> next;  
    if(ptr -> next == NULL)  
    {  
        printf("\nCan't delete\n");  
    }  
    else if(ptr -> next -> next == NULL)  
    {  
        ptr ->next = NULL;  
    }  
    else  
    {   
        temp = ptr -> next;  
        ptr -> next = temp -> next;  
        temp -> next -> prev = ptr;  
        free(temp);  
        printf("\nnode deleted\n");  
    }     
}  
void display()  
{  
    struct node *ptr;  
    printf("\n printing values...\n");  
    ptr = head;  
    while(ptr != NULL)  
    {  
        printf("%d\n",ptr->data);  
        ptr=ptr->next;  
    }  
}   
void search()  
{  
    struct node *ptr;  
    int item,i=0,flag;  
    ptr = head;   
    if(ptr == NULL)  
    {  
        printf("\nEmpty List\n");  
    }  
    else  
    {   
        printf("\nEnter item which you want to search?\n");   
        scanf("%d",&item);  
        while (ptr!=NULL)  
        {  
            if(ptr->data == item)  
            {  
                printf("\nitem found at location %d ",i+1);  
                flag=0;  
                break;  
            }   
            else  
            {  
                flag=1;  
            }  
            i++;  
            ptr = ptr -> next;  
        }  
        if(flag==1)  
        {  
            printf("\nItem not found\n");  
        }  
    }            
}  
19. Write a program to create a Binary Search Tree and display its contents using recursive preorder, postorder and inorder traversal.
CODE-
#include <stdio.h>
#include <stdlib.h>
enum Traversal {PREORDER, INORDER, POSTORDER}; 
typedef enum Traversal Traversal;
typedef struct Node Node;
 
struct Node {
    int value;
    Node* left, *right;
};
Node* init_tree(int data) {

    Node* root = (Node*) malloc (sizeof(Node));
    root->left = root->right = NULL;
    root->value = data;
    return root;
} 
Node* create_node(int data) {
    Node* node = (Node*) malloc (sizeof(Node));
    node->value = data;
    node->left = node->right = NULL;
    return node;
}
void free_tree(Node* root) {
    Node* temp = root;
    if (!temp)
        return;
    free_tree(temp->left);
    free_tree(temp->right);
    if (!temp->left && !temp->right) {
        free(temp);
        return;
    }} 
void print_tree(Traversal traversal, Node* root) {
    if (!root)
        return;
    switch(traversal) {
        case (PREORDER):
    
            printf("%d -> ", root->value);
            print_tree(traversal, root->left);
            print_tree(traversal, root->right);
            break;
 
        case (INORDER):
            print_tree(traversal, root->left);
            printf("%d -> ", root->value);
            print_tree(traversal, root->right);
            break;
 
        case (POSTORDER):
            print_tree(traversal, root->left);
            print_tree(traversal, root->right);
            printf("%d -> ", root->value);
            break;
    }}
int main() {
    Node* root = init_tree(10);
    root->left = create_node(20);
    root->right = create_node(30);
    root->left->left = create_node(40);
    root->left->right = create_node(50); 
    root->right->left = create_node(60);
    root->right->right = create_node(70);
    printf("Preorder Traversal:\n");
    print_tree(PREORDER, root);
    printf("\n\n");
    printf("Inorder Traversal:\n");
    print_tree(INORDER, root);
    printf("\n\n");
    printf("Postorder Traversal:\n");
    print_tree(POSTORDER, root);
    printf("\n\n");
    free_tree(root);
    return 0;
}
20. Write a program to implement deletion of a node in binary search tree
CODE-
#include <stdio.h>
#include <stdlib.h>
 
struct node {
    int key;
    struct node *left, *right;
};
 
struct node* newNode(int item)
{
    struct node* temp
        = (struct node*)malloc(sizeof(struct node));
    temp->key = item;
    temp->left = temp->right = NULL;
    return temp;
}
 
void inorder(struct node* root)
{
    if (root != NULL) {
        inorder(root->left);
        printf("%d ", root->key);
        inorder(root->right);
    }
}
 
struct node* insert(struct node* node, int key)
{
    if (node == NULL)
        return newNode(key);
 
    
    if (key < node->key)
        node->left = insert(node->left, key);
    else
        node->right = insert(node->right, key);
 
    
    return node;
}
 
struct node* minValueNode(struct node* node)
{
    struct node* current = node;
 
    
    while (current && current->left != NULL)
        current = current->left;
 
    return current;
}
 
struct node* deleteNode(struct node* root, int key)
{
    if (root == NULL)
        return root;
 
    
    if (key < root->key)
        root->left = deleteNode(root->left, key);
 
    else if (key > root->key)
        root->right = deleteNode(root->right, key);
    else {
        
        if (root->left == NULL) {
            struct node* temp = root->right;
            free(root);
            return temp;
        }
        else if (root->right == NULL) {
            struct node* temp = root->left;
            free(root);
            return temp;
        }
 
        struct node* temp = minValueNode(root->right);
 
        
        root->key = temp->key;
 
      
        root->right = deleteNode(root->right, temp->key);
    }
    return root;
}
 
int main()
{
    struct node* root = NULL;
    root = insert(root, 50);
    root = insert(root, 30);
    root = insert(root, 20);
    root = insert(root, 40);
    root = insert(root, 70);
    root = insert(root, 60);
    root = insert(root, 80);
 
    printf("Inorder traversal of the given tree \n");
    inorder(root);
 
    printf("\nDelete 20\n");
    root = deleteNode(root, 20);
    printf("Inorder traversal of the modified tree \n");
    inorder(root);
 
    printf("\nDelete 30\n");
    root = deleteNode(root, 30);
    printf("Inorder traversal of the modified tree \n");
    inorder(root);
 
    printf("\nDelete 50\n");
    root = deleteNode(root, 50);
    printf("Inorder traversal of the modified tree \n");
    inorder(root);
 
    return 0;
}


21. Write a program to implement Binary tree and display the contents using non-recursive preorder, postorder and inorder traversal techniques.
CODE-
#include<stdio.h>
#include<stdlib.h>
#define bool int
 

struct tNode
{
   int data;
   struct tNode* left;
   struct tNode* right;
};
 

struct sNode
{
  struct tNode *t;
  struct sNode *next;
};
 

void push(struct sNode** top_ref, struct tNode *t);
struct tNode *pop(struct sNode** top_ref);
bool isEmpty(struct sNode *top);
 

void inOrder(struct tNode *root)
{

  struct tNode *current = root;
  struct sNode *s = NULL; 
  bool done = 0;
 
  while (!done)
  {
   
    if(current !=  NULL)
    {
     
      push(&s, current);                                              
      current = current->left; 
    }
        
    
    else                                                             
    {
      if (!isEmpty(s))
      {
        current = pop(&s);
        printf("%d ", current->data);
 
       
        current = current->right;
      }
      else
        done = 1;
    }
  } 
}    
 

void push(struct sNode** top_ref, struct tNode *t)
{

  struct sNode* new_tNode =
            (struct sNode*) malloc(sizeof(struct sNode));
 
  if(new_tNode == NULL)
  {
     printf("Stack Overflow \n");
     getchar();
     exit(0);
  }           
 
  /* put in the data  */
  new_tNode->t  = t;
 
 
  new_tNode->next = (*top_ref);  
 

  (*top_ref)    = new_tNode;
}
 

bool isEmpty(struct sNode *top)
{
   return (top == NULL)? 1 : 0;
}  
 

struct tNode *pop(struct sNode** top_ref)
{
  struct tNode *res;
  struct sNode *top;

  if(isEmpty(*top_ref))
  {
     printf("Stack Underflow \n");
     getchar();
     exit(0);
  }
  else
  {
     top = *top_ref;
     res = top->t;
     *top_ref = top->next;
     free(top);
     return res;
  }
}
 

struct tNode* newtNode(int data)
{
  struct tNode* tNode = (struct tNode*)
                       malloc(sizeof(struct tNode));
  tNode->data = data;
  tNode->left = NULL;
  tNode->right = NULL;
 
  return(tNode);
}
 
int main()
{
 
 
  struct tNode *root = newtNode(1);
  root->left        = newtNode(2);
  root->right       = newtNode(3);
  root->left->left  = newtNode(4);
  root->left->right = newtNode(5);
 
  inOrder(root);
 
  getchar();
  return 0;
}

22. Write a program to sort the given array using HeapSort.
CODE-
#include <stdio.h>
 
void main()
{
    int heap[10], no, i, j, c, root, temp;
 
    printf("\n Enter no of elements :");
    scanf("%d", &no);
    printf("\n Enter the nos : ");
    for (i = 0; i < no; i++)
       scanf("%d", &heap[i]);
    for (i = 1; i < no; i++)
    {
        c = i;
        do
        {
            root = (c - 1) / 2;             
            if (heap[root] < heap[c])   /* to create MAX heap array */
            {
                temp = heap[root];
                heap[root] = heap[c];
                heap[c] = temp;
            }
            c = root;
        } while (c != 0);
    }
 
    printf("Heap array : ");
    for (i = 0; i < no; i++)
        printf("%d\t ", heap[i]);
    for (j = no - 1; j >= 0; j--)
    {
        temp = heap[0];
        heap[0] = heap[j];    /* swap max element with rightmost leaf element */
        heap[j] = temp;
        root = 0;
        do 
        {
            c = 2 * root + 1;    /* left node of root element */
            if ((heap[c] < heap[c + 1]) && c < j-1)
                c++;
            if (heap[root]<heap[c] && c<j
            {
                temp = heap[root];
                heap[root] = heap[c];
                heap[c] = temp;
            }
            root = c;
        } while (c < j);
    } 
    printf("\n The sorted array is : ");
    for (i = 0; i < no; i++)
       printf("\t %d", heap[i]);
    printf("\n Complexity : \n Best case = Avg case = Worst case = O(n logn) \n");
}
23. Write a program of Graph traversal-Depth first search and Breadth first search.
CODE-
#include <stdio.h>
#include <stdlib.h>
#define SIZE 40

struct queue {
  int items[SIZE];
  int front;
  int rear;
};

struct queue* createQueue();
void enqueue(struct queue* q, int);
int dequeue(struct queue* q);
void display(struct queue* q);
int isEmpty(struct queue* q);
void printQueue(struct queue* q);

struct node {
  int vertex;
  struct node* next;
};
struct node* createNode(int);
struct Graph {
  int numVertices;
  struct node** adjLists;
  int* visited;
};

void bfs(struct Graph* graph, int startVertex) {
  struct queue* q = createQueue();

  graph->visited[startVertex] = 1;
  enqueue(q, startVertex);

  while (!isEmpty(q)) {
    printQueue(q);
    int currentVertex = dequeue(q);
    printf("Visited %d\n", currentVertex);

    struct node* temp = graph->adjLists[currentVertex];

    while (temp) {
      int adjVertex = temp->vertex;

      if (graph->visited[adjVertex] == 0) {
        graph->visited[adjVertex] = 1;
        enqueue(q, adjVertex);
      }
      temp = temp->next;
    }
  }
}

struct node* createNode(int v) {
  struct node* newNode = malloc(sizeof(struct node));
  newNode->vertex = v;
  newNode->next = NULL;
  return newNode;
}

struct Graph* createGraph(int vertices) {
  struct Graph* graph = malloc(sizeof(struct Graph));
  graph->numVertices = vertices;

  graph->adjLists = malloc(vertices * sizeof(struct node*));
  graph->visited = malloc(vertices * sizeof(int));

  int i;
  for (i = 0; i < vertices; i++) {
    graph->adjLists[i] = NULL;
    graph->visited[i] = 0;
  }

  return graph;
}

void addEdge(struct Graph* graph, int src, int dest) {
  struct node* newNode = createNode(dest);
  newNode->next = graph->adjLists[src];
  graph->adjLists[src] = newNode;
  newNode = createNode(src);
  newNode->next = graph->adjLists[dest];
  graph->adjLists[dest] = newNode;
}

struct queue* createQueue() {
  struct queue* q = malloc(sizeof(struct queue));
  q->front = -1;
  q->rear = -1;
  return q;
}
   int isEmpty(struct queue* q) {
  if (q->rear == -1)
    return 1;
  else
    return 0;
}

void enqueue(struct queue* q, int value) {
  if (q->rear == SIZE - 1)
    printf("\nQueue is Full!!");
  else {
    if (q->front == -1)
      q->front = 0;
    q->rear++;
    q->items[q->rear] = value;
  }
}
int dequeue(struct queue* q) {
  int item;
  if (isEmpty(q)) {
    printf("Queue is empty");
    item = -1;
  } else {
    item = q->items[q->front];
    q->front++;
    if (q->front > q->rear) {
      printf("Resetting queue ");
      q->front = q->rear = -1;
    }
  }
  return item;
}
void printQueue(struct queue* q) {
  int i = q->front;

  if (isEmpty(q)) {
    printf("Queue is empty");
  } else {
    printf("\nQueue contains \n");
    for (i = q->front; i < q->rear + 1; i++) {
      printf("%d ", q->items[i]);
    }
  }
}
int main() {
  struct Graph* graph = createGraph(6);
  addEdge(graph, 0, 1);
  addEdge(graph, 0, 2);
  addEdge(graph, 1, 2);
  addEdge(graph, 1, 4);
  addEdge(graph, 1, 3);
  addEdge(graph, 2, 4);
  addEdge(graph, 3, 4);

  bfs(graph, 0);

  return 0;
}
24. Write a program to implement Prim's algorithm.
CODE-
#include<stdio.h>
#include<stdlib.h>
 
#define infinity 9999
#define MAX 20
 
int G[MAX][MAX],spanning[MAX][MAX],n;
 
int prims();
 
int main()
{
int i,j,total_cost;
printf("Enter no. of vertices:");
scanf("%d",&n);
printf("\nEnter the adjacency matrix:\n");
for(i=0;i<n;i++)
for(j=0;j<n;j++)
scanf("%d",&G[i][j]);
total_cost=prims();
printf("\nspanning tree matrix:\n");
for(i=0;i<n;i++)
{
printf("\n");
for(j=0;j<n;j++)
printf("%d\t",spanning[i][j]);
}
printf("\n\nTotal cost of spanning tree=%d",total_cost);
return 0;
}
 
int prims()
{
int cost[MAX][MAX];
int u,v,min_distance,distance[MAX],from[MAX];
int visited[MAX],no_of_edges,i,min_cost,j;
for(i=0;i<n;i++)
for(j=0;j<n;j++)
{
if(G[i][j]==0)
cost[i][j]=infinity;
else
cost[i][j]=G[i][j];
spanning[i][j]=0;
}
distance[0]=0;
visited[0]=1;
for(i=1;i<n;i++)
{
distance[i]=cost[0][i];
from[i]=0;
visited[i]=0;
}
min_cost=0; 
no_of_edges=n-1; 
while(no_of_edges>0)
{
min_distance=infinity;
for(i=1;i<n;i++)
if(visited[i]==0&&distance[i]<min_distance)
{
v=i;
min_distance=distance[i];
}
u=from[v];
spanning[u][v]=distance[v];
spanning[v][u]=distance[v];
no_of_edges--;
visited[v]=1;
for(i=1;i<n;i++)
if(visited[i]==0&&cost[i][v]<distance[i])
{
distance[i]=cost[i][v];
from[i]=v;
}
min_cost=min_cost+cost[u][v];
}
return(min_cost);
}

25. Write a program to implement Kruskal algorithm.
CODE-
#include<stdio.h>
 
#define MAX 30
 
typedef struct edge
{
int u,v,w;
}edge;
 
typedef struct edgelist
{
edge data[MAX];
int n;
}edgelist;
 
edgelist elist;
 
int G[MAX][MAX],n;
edgelist spanlist;
 
void kruskal();
int find(int belongs[],int vertexno);
void union1(int belongs[],int c1,int c2);
void sort();
void print();
 
void main()
{
int i,j,total_cost;
printf("\nEnter number of vertices:");
scanf("%d",&n);
printf("\nEnter the adjacency matrix:\n");
for(i=0;i<n;i++)
for(j=0;j<n;j++)
scanf("%d",&G[i][j]);
kruskal();
print();
}
 
void kruskal()
{
int belongs[MAX],i,j,cno1,cno2;
elist.n=0;
 
for(i=1;i<n;i++)
for(j=0;j<i;j++)
{
if(G[i][j]!=0)
{
elist.data[elist.n].u=i;
elist.data[elist.n].v=j;
elist.data[elist.n].w=G[i][j];
elist.n++;
}
}
 
sort();
for(i=0;i<n;i++)
belongs[i]=i;
spanlist.n=0;
for(i=0;i<elist.n;i++)
{
cno1=find(belongs,elist.data[i].u);
cno2=find(belongs,elist.data[i].v);
if(cno1!=cno2)
{
spanlist.data[spanlist.n]=elist.data[i];
spanlist.n=spanlist.n+1;
union1(belongs,cno1,cno2);
}}}
 
int find(int belongs[],int vertexno)
{
return(belongs[vertexno]);
}
 
void union1(int belongs[],int c1,int c2)
{
int i;
for(i=0;i<n;i++)
if(belongs[i]==c2)
belongs[i]=c1;
}
 
void sort()
{
int i,j;
edge temp;
for(i=1;i<elist.n;i++)
for(j=0;j<elist.n-1;j++)
if(elist.data[j].w>elist.data[j+1].w)
{
temp=elist.data[j];
elist.data[j]=elist.data[j+1];
elist.data[j+1]=temp;}}
void print()
{
int i,cost=0;
for(i=0;i<spanlist.n;i++)
{
printf("\n%d\t%d\t%d",spanlist.data[i].u,spanlist.data[i].v,spanlist.data[i].w);
cost=cost+spanlist.data[i].w;
}
 
printf("\n\nCost of the spanning tree=%d",cost);
}


